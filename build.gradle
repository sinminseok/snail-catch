// 버전 푸쉬
// ./gradlew clean shadowJar publish
// git tag 0.7.0
// git push origin 0.7.0

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.snailcatch'
version = '0.7.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot BOM 명시 적용
    implementation(enforcedPlatform("org.springframework.boot:spring-boot-dependencies:3.2.5"))

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework:spring-aop'
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework:spring-web'

    // 기타 라이브러리
    api 'p6spy:p6spy:3.9.1'
    implementation 'com.github.vertical-blank:sql-formatter:2.0.3'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jar {
    enabled = false
}

shadowJar {
    archiveBaseName.set('snailcatch-sdk-fat')
    archiveVersion.set(version)
    archiveClassifier.set('')
    mergeServiceFiles()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'snailcatch-sdk'
            artifact(tasks.shadowJar)
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/sinminseok/snail-catch")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
